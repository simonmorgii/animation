/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package animation;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Name
 */
public class BewegungsGui extends javax.swing.JPanel {

    BewegungsBasis[] alleBeweger;

    public BewegungsGui() {
        initComponents();
        CustomMouseListener cml = new CustomMouseListener();
        /*
        
        Objekt anlegen mit Ref.
        
        
         */
        BewegungCustom customBeweger = new BewegungCustom(10, 10, 1000, 1000);
        addMouseListener(cml);
        BewegungsBasis[] tempBeweger = {
            new BewegungsBasis(10, 10, 1000, 1000),
            new BewegungHorizontal(10, 10, 1000, 1000),
            new BewegungVertikal(10, 10, 1000, 1000),
            customBeweger
        };
        alleBeweger = tempBeweger;
        Timer t;
        t = new Timer(5, new ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent e) {
                Point oldPosition = customBeweger.getLastPoint();
                Point newPosition = cml.getPosition();
                if (oldPosition != null && newPosition != null) {
                    if (oldPosition.x != newPosition.x || oldPosition.y != newPosition.y) {
                        customBeweger.addPosition(newPosition);
                    }
                }
                update();
            }
        });
        t.start();
    }

    public void paintComponent(Graphics g) {
        g.setColor(Color.white);
        g.fillRect(0, 0, 1100, 1100);
        g.setColor(Color.black);
        for (int i = 0; i < alleBeweger.length; i++) {
            g.fillRect(alleBeweger[i].getPosition().x, alleBeweger[i].getPosition().y, 100, 100);
        }
    }

    public void update() {
        for (int i = 0; i < alleBeweger.length; i++) {
            alleBeweger[i].bewege();
        }
        repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
